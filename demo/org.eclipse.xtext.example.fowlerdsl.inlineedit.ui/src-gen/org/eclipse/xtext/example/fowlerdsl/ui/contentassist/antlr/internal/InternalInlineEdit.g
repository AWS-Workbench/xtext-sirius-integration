/*
 * generated by Xtext
 */
grammar InternalInlineEdit;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package org.eclipse.xtext.example.fowlerdsl.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.eclipse.xtext.example.fowlerdsl.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import org.eclipse.xtext.example.fowlerdsl.services.InlineEditGrammarAccess;

}

@parser::members {
 
 	private InlineEditGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(InlineEditGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleInlineStatemachine
entryRuleInlineStatemachine 
:
{ before(grammarAccess.getInlineStatemachineRule()); }
	 ruleInlineStatemachine
{ after(grammarAccess.getInlineStatemachineRule()); } 
	 EOF 
;

// Rule InlineStatemachine
ruleInlineStatemachine
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInlineStatemachineAccess().getStatemachineParserRuleCall()); }
	ruleStatemachine
{ after(grammarAccess.getInlineStatemachineAccess().getStatemachineParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTransition
entryRuleTransition 
:
{ before(grammarAccess.getTransitionRule()); }
	 ruleTransition
{ after(grammarAccess.getTransitionRule()); } 
	 EOF 
;

// Rule Transition
ruleTransition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTransitionAccess().getGroup()); }
(rule__Transition__Group__0)
{ after(grammarAccess.getTransitionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStatemachine
entryRuleStatemachine 
:
{ before(grammarAccess.getStatemachineRule()); }
	 ruleStatemachine
{ after(grammarAccess.getStatemachineRule()); } 
	 EOF 
;

// Rule Statemachine
ruleStatemachine
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStatemachineAccess().getGroup()); }
(rule__Statemachine__Group__0)
{ after(grammarAccess.getStatemachineAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEvent
entryRuleEvent 
:
{ before(grammarAccess.getEventRule()); }
	 ruleEvent
{ after(grammarAccess.getEventRule()); } 
	 EOF 
;

// Rule Event
ruleEvent
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEventAccess().getGroup()); }
(rule__Event__Group__0)
{ after(grammarAccess.getEventAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleGuard
entryRuleGuard 
:
{ before(grammarAccess.getGuardRule()); }
	 ruleGuard
{ after(grammarAccess.getGuardRule()); } 
	 EOF 
;

// Rule Guard
ruleGuard
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getGuardAccess().getAlternatives()); }
(rule__Guard__Alternatives)
{ after(grammarAccess.getGuardAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleValueGuard
entryRuleValueGuard 
:
{ before(grammarAccess.getValueGuardRule()); }
	 ruleValueGuard
{ after(grammarAccess.getValueGuardRule()); } 
	 EOF 
;

// Rule ValueGuard
ruleValueGuard
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getValueGuardAccess().getCondAssignment()); }
(rule__ValueGuard__CondAssignment)
{ after(grammarAccess.getValueGuardAccess().getCondAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRangeGuard
entryRuleRangeGuard 
:
{ before(grammarAccess.getRangeGuardRule()); }
	 ruleRangeGuard
{ after(grammarAccess.getRangeGuardRule()); } 
	 EOF 
;

// Rule RangeGuard
ruleRangeGuard
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRangeGuardAccess().getGroup()); }
(rule__RangeGuard__Group__0)
{ after(grammarAccess.getRangeGuardAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleValue
entryRuleValue 
:
{ before(grammarAccess.getValueRule()); }
	 ruleValue
{ after(grammarAccess.getValueRule()); } 
	 EOF 
;

// Rule Value
ruleValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getValueAccess().getAlternatives()); }
(rule__Value__Alternatives)
{ after(grammarAccess.getValueAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConstantRef
entryRuleConstantRef 
:
{ before(grammarAccess.getConstantRefRule()); }
	 ruleConstantRef
{ after(grammarAccess.getConstantRefRule()); } 
	 EOF 
;

// Rule ConstantRef
ruleConstantRef
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConstantRefAccess().getConstantAssignment()); }
(rule__ConstantRef__ConstantAssignment)
{ after(grammarAccess.getConstantRefAccess().getConstantAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIntLiteral
entryRuleIntLiteral 
:
{ before(grammarAccess.getIntLiteralRule()); }
	 ruleIntLiteral
{ after(grammarAccess.getIntLiteralRule()); } 
	 EOF 
;

// Rule IntLiteral
ruleIntLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIntLiteralAccess().getValueAssignment()); }
(rule__IntLiteral__ValueAssignment)
{ after(grammarAccess.getIntLiteralAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCommand
entryRuleCommand 
:
{ before(grammarAccess.getCommandRule()); }
	 ruleCommand
{ after(grammarAccess.getCommandRule()); } 
	 EOF 
;

// Rule Command
ruleCommand
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCommandAccess().getGroup()); }
(rule__Command__Group__0)
{ after(grammarAccess.getCommandAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConstant
entryRuleConstant 
:
{ before(grammarAccess.getConstantRule()); }
	 ruleConstant
{ after(grammarAccess.getConstantRule()); } 
	 EOF 
;

// Rule Constant
ruleConstant
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConstantAccess().getGroup()); }
(rule__Constant__Group__0)
{ after(grammarAccess.getConstantAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleState
entryRuleState 
:
{ before(grammarAccess.getStateRule()); }
	 ruleState
{ after(grammarAccess.getStateRule()); } 
	 EOF 
;

// Rule State
ruleState
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStateAccess().getGroup()); }
(rule__State__Group__0)
{ after(grammarAccess.getStateAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleThing
entryRuleThing 
:
{ before(grammarAccess.getThingRule()); }
	 ruleThing
{ after(grammarAccess.getThingRule()); } 
	 EOF 
;

// Rule Thing
ruleThing
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getThingAccess().getGroup()); }
(rule__Thing__Group__0)
{ after(grammarAccess.getThingAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__Guard__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGuardAccess().getValueGuardParserRuleCall_0()); }
	ruleValueGuard
{ after(grammarAccess.getGuardAccess().getValueGuardParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getGuardAccess().getRangeGuardParserRuleCall_1()); }
	ruleRangeGuard
{ after(grammarAccess.getGuardAccess().getRangeGuardParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Value__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueAccess().getConstantRefParserRuleCall_0()); }
	ruleConstantRef
{ after(grammarAccess.getValueAccess().getConstantRefParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getValueAccess().getIntLiteralParserRuleCall_1()); }
	ruleIntLiteral
{ after(grammarAccess.getValueAccess().getIntLiteralParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Transition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group__0__Impl
	rule__Transition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getGroup_0()); }
(rule__Transition__Group_0__0)?
{ after(grammarAccess.getTransitionAccess().getGroup_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group__1__Impl
	rule__Transition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getEventAssignment_1()); }
(rule__Transition__EventAssignment_1)
{ after(grammarAccess.getTransitionAccess().getEventAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group__2__Impl
	rule__Transition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getEqualsSignGreaterThanSignKeyword_2()); }

	'=>' 

{ after(grammarAccess.getTransitionAccess().getEqualsSignGreaterThanSignKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getStateAssignment_3()); }
(rule__Transition__StateAssignment_3)
{ after(grammarAccess.getTransitionAccess().getStateAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Transition__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group_0__0__Impl
	rule__Transition__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getLeftSquareBracketKeyword_0_0()); }

	'[' 

{ after(grammarAccess.getTransitionAccess().getLeftSquareBracketKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group_0__1__Impl
	rule__Transition__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getGuardAssignment_0_1()); }
(rule__Transition__GuardAssignment_0_1)
{ after(grammarAccess.getTransitionAccess().getGuardAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getRightSquareBracketKeyword_0_2()); }

	']' 

{ after(grammarAccess.getTransitionAccess().getRightSquareBracketKeyword_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Statemachine__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statemachine__Group__0__Impl
	rule__Statemachine__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statemachine__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatemachineAccess().getStatemachineAction_0()); }
(

)
{ after(grammarAccess.getStatemachineAccess().getStatemachineAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statemachine__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statemachine__Group__1__Impl
	rule__Statemachine__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Statemachine__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatemachineAccess().getGroup_1()); }
(rule__Statemachine__Group_1__0)?
{ after(grammarAccess.getStatemachineAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statemachine__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statemachine__Group__2__Impl
	rule__Statemachine__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Statemachine__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatemachineAccess().getGroup_2()); }
(rule__Statemachine__Group_2__0)?
{ after(grammarAccess.getStatemachineAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statemachine__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statemachine__Group__3__Impl
	rule__Statemachine__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Statemachine__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatemachineAccess().getGroup_3()); }
(rule__Statemachine__Group_3__0)?
{ after(grammarAccess.getStatemachineAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statemachine__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statemachine__Group__4__Impl
	rule__Statemachine__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Statemachine__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatemachineAccess().getGroup_4()); }
(rule__Statemachine__Group_4__0)?
{ after(grammarAccess.getStatemachineAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statemachine__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statemachine__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statemachine__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatemachineAccess().getStatesAssignment_5()); }
(rule__Statemachine__StatesAssignment_5)*
{ after(grammarAccess.getStatemachineAccess().getStatesAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Statemachine__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statemachine__Group_1__0__Impl
	rule__Statemachine__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statemachine__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatemachineAccess().getEventsKeyword_1_0()); }

	'events' 

{ after(grammarAccess.getStatemachineAccess().getEventsKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statemachine__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statemachine__Group_1__1__Impl
	rule__Statemachine__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Statemachine__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getStatemachineAccess().getEventsAssignment_1_1()); }
(rule__Statemachine__EventsAssignment_1_1)
{ after(grammarAccess.getStatemachineAccess().getEventsAssignment_1_1()); }
)
(
{ before(grammarAccess.getStatemachineAccess().getEventsAssignment_1_1()); }
(rule__Statemachine__EventsAssignment_1_1)*
{ after(grammarAccess.getStatemachineAccess().getEventsAssignment_1_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statemachine__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statemachine__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statemachine__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatemachineAccess().getEndKeyword_1_2()); }

	'end' 

{ after(grammarAccess.getStatemachineAccess().getEndKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Statemachine__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statemachine__Group_2__0__Impl
	rule__Statemachine__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statemachine__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatemachineAccess().getResetEventsKeyword_2_0()); }

	'resetEvents' 

{ after(grammarAccess.getStatemachineAccess().getResetEventsKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statemachine__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statemachine__Group_2__1__Impl
	rule__Statemachine__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Statemachine__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getStatemachineAccess().getResetEventsAssignment_2_1()); }
(rule__Statemachine__ResetEventsAssignment_2_1)
{ after(grammarAccess.getStatemachineAccess().getResetEventsAssignment_2_1()); }
)
(
{ before(grammarAccess.getStatemachineAccess().getResetEventsAssignment_2_1()); }
(rule__Statemachine__ResetEventsAssignment_2_1)*
{ after(grammarAccess.getStatemachineAccess().getResetEventsAssignment_2_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statemachine__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statemachine__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statemachine__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatemachineAccess().getEndKeyword_2_2()); }

	'end' 

{ after(grammarAccess.getStatemachineAccess().getEndKeyword_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Statemachine__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statemachine__Group_3__0__Impl
	rule__Statemachine__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statemachine__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatemachineAccess().getCommandsKeyword_3_0()); }

	'commands' 

{ after(grammarAccess.getStatemachineAccess().getCommandsKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statemachine__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statemachine__Group_3__1__Impl
	rule__Statemachine__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Statemachine__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getStatemachineAccess().getCommandsAssignment_3_1()); }
(rule__Statemachine__CommandsAssignment_3_1)
{ after(grammarAccess.getStatemachineAccess().getCommandsAssignment_3_1()); }
)
(
{ before(grammarAccess.getStatemachineAccess().getCommandsAssignment_3_1()); }
(rule__Statemachine__CommandsAssignment_3_1)*
{ after(grammarAccess.getStatemachineAccess().getCommandsAssignment_3_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statemachine__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statemachine__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statemachine__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatemachineAccess().getEndKeyword_3_2()); }

	'end' 

{ after(grammarAccess.getStatemachineAccess().getEndKeyword_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Statemachine__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statemachine__Group_4__0__Impl
	rule__Statemachine__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statemachine__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatemachineAccess().getConstantsKeyword_4_0()); }

	'constants' 

{ after(grammarAccess.getStatemachineAccess().getConstantsKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statemachine__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statemachine__Group_4__1__Impl
	rule__Statemachine__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Statemachine__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getStatemachineAccess().getConstantsAssignment_4_1()); }
(rule__Statemachine__ConstantsAssignment_4_1)
{ after(grammarAccess.getStatemachineAccess().getConstantsAssignment_4_1()); }
)
(
{ before(grammarAccess.getStatemachineAccess().getConstantsAssignment_4_1()); }
(rule__Statemachine__ConstantsAssignment_4_1)*
{ after(grammarAccess.getStatemachineAccess().getConstantsAssignment_4_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statemachine__Group_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statemachine__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statemachine__Group_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatemachineAccess().getEndKeyword_4_2()); }

	'end' 

{ after(grammarAccess.getStatemachineAccess().getEndKeyword_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Event__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Event__Group__0__Impl
	rule__Event__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Event__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventAccess().getNameAssignment_0()); }
(rule__Event__NameAssignment_0)
{ after(grammarAccess.getEventAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Event__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Event__Group__1__Impl
	rule__Event__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Event__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventAccess().getCodeAssignment_1()); }
(rule__Event__CodeAssignment_1)?
{ after(grammarAccess.getEventAccess().getCodeAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Event__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Event__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Event__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventAccess().getGroup_2()); }
(rule__Event__Group_2__0)?
{ after(grammarAccess.getEventAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Event__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Event__Group_2__0__Impl
	rule__Event__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Event__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventAccess().getLeftSquareBracketKeyword_2_0()); }

	'[' 

{ after(grammarAccess.getEventAccess().getLeftSquareBracketKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Event__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Event__Group_2__1__Impl
	rule__Event__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Event__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventAccess().getGuardAssignment_2_1()); }
(rule__Event__GuardAssignment_2_1)
{ after(grammarAccess.getEventAccess().getGuardAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Event__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Event__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Event__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventAccess().getRightSquareBracketKeyword_2_2()); }

	']' 

{ after(grammarAccess.getEventAccess().getRightSquareBracketKeyword_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__RangeGuard__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RangeGuard__Group__0__Impl
	rule__RangeGuard__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeGuard__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRangeGuardAccess().getMinAssignment_0()); }
(rule__RangeGuard__MinAssignment_0)
{ after(grammarAccess.getRangeGuardAccess().getMinAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RangeGuard__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RangeGuard__Group__1__Impl
	rule__RangeGuard__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeGuard__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRangeGuardAccess().getFullStopFullStopKeyword_1()); }

	'..' 

{ after(grammarAccess.getRangeGuardAccess().getFullStopFullStopKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RangeGuard__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RangeGuard__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeGuard__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRangeGuardAccess().getMaxAssignment_2()); }
(rule__RangeGuard__MaxAssignment_2)
{ after(grammarAccess.getRangeGuardAccess().getMaxAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Command__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Command__Group__0__Impl
	rule__Command__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandAccess().getGroup_0()); }
(rule__Command__Group_0__0)?
{ after(grammarAccess.getCommandAccess().getGroup_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Command__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Command__Group__1__Impl
	rule__Command__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandAccess().getNameAssignment_1()); }
(rule__Command__NameAssignment_1)
{ after(grammarAccess.getCommandAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Command__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Command__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandAccess().getCodeAssignment_2()); }
(rule__Command__CodeAssignment_2)
{ after(grammarAccess.getCommandAccess().getCodeAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Command__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Command__Group_0__0__Impl
	rule__Command__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandAccess().getLeftSquareBracketKeyword_0_0()); }

	'[' 

{ after(grammarAccess.getCommandAccess().getLeftSquareBracketKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Command__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Command__Group_0__1__Impl
	rule__Command__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandAccess().getGuardAssignment_0_1()); }
(rule__Command__GuardAssignment_0_1)
{ after(grammarAccess.getCommandAccess().getGuardAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Command__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Command__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandAccess().getRightSquareBracketKeyword_0_2()); }

	']' 

{ after(grammarAccess.getCommandAccess().getRightSquareBracketKeyword_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Constant__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constant__Group__0__Impl
	rule__Constant__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantAccess().getNameAssignment_0()); }
(rule__Constant__NameAssignment_0)
{ after(grammarAccess.getConstantAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Constant__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constant__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantAccess().getValueAssignment_1()); }
(rule__Constant__ValueAssignment_1)
{ after(grammarAccess.getConstantAccess().getValueAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__State__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group__0__Impl
	rule__State__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getStateKeyword_0()); }

	'state' 

{ after(grammarAccess.getStateAccess().getStateKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__State__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group__1__Impl
	rule__State__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getNameAssignment_1()); }
(rule__State__NameAssignment_1)
{ after(grammarAccess.getStateAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__State__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group__2__Impl
	rule__State__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getGroup_2()); }
(rule__State__Group_2__0)?
{ after(grammarAccess.getStateAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__State__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group__3__Impl
	rule__State__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getGroup_3()); }
(rule__State__Group_3__0)?
{ after(grammarAccess.getStateAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__State__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group__4__Impl
	rule__State__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getTransitionsAssignment_4()); }
(rule__State__TransitionsAssignment_4)*
{ after(grammarAccess.getStateAccess().getTransitionsAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__State__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group__5__Impl
	rule__State__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getGroup_5()); }
(rule__State__Group_5__0)?
{ after(grammarAccess.getStateAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__State__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getEndKeyword_6()); }

	'end' 

{ after(grammarAccess.getStateAccess().getEndKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__State__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group_2__0__Impl
	rule__State__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getDescriptionKeyword_2_0()); }

	'description' 

{ after(grammarAccess.getStateAccess().getDescriptionKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__State__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getDescriptionAssignment_2_1()); }
(rule__State__DescriptionAssignment_2_1)
{ after(grammarAccess.getStateAccess().getDescriptionAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__State__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group_3__0__Impl
	rule__State__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getActionsKeyword_3_0()); }

	'actions' 

{ after(grammarAccess.getStateAccess().getActionsKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__State__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group_3__1__Impl
	rule__State__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getLeftCurlyBracketKeyword_3_1()); }

	'{' 

{ after(grammarAccess.getStateAccess().getLeftCurlyBracketKeyword_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__State__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group_3__2__Impl
	rule__State__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getStateAccess().getActionsAssignment_3_2()); }
(rule__State__ActionsAssignment_3_2)
{ after(grammarAccess.getStateAccess().getActionsAssignment_3_2()); }
)
(
{ before(grammarAccess.getStateAccess().getActionsAssignment_3_2()); }
(rule__State__ActionsAssignment_3_2)*
{ after(grammarAccess.getStateAccess().getActionsAssignment_3_2()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__State__Group_3__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group_3__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group_3__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getRightCurlyBracketKeyword_3_3()); }

	'}' 

{ after(grammarAccess.getStateAccess().getRightCurlyBracketKeyword_3_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__State__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group_5__0__Impl
	rule__State__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getThingsKeyword_5_0()); }

	'things' 

{ after(grammarAccess.getStateAccess().getThingsKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__State__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getThingsAssignment_5_1()); }
(rule__State__ThingsAssignment_5_1)*
{ after(grammarAccess.getStateAccess().getThingsAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Thing__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Thing__Group__0__Impl
	rule__Thing__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Thing__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getThingAccess().getNameAssignment_0()); }
(rule__Thing__NameAssignment_0)
{ after(grammarAccess.getThingAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Thing__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Thing__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Thing__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getThingAccess().getGuardAssignment_1()); }
(rule__Thing__GuardAssignment_1)
{ after(grammarAccess.getThingAccess().getGuardAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__Transition__GuardAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getGuardGuardParserRuleCall_0_1_0()); }
	ruleGuard{ after(grammarAccess.getTransitionAccess().getGuardGuardParserRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__EventAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getEventEventCrossReference_1_0()); }
(
{ before(grammarAccess.getTransitionAccess().getEventEventIDTerminalRuleCall_1_0_1()); }
	RULE_ID{ after(grammarAccess.getTransitionAccess().getEventEventIDTerminalRuleCall_1_0_1()); }
)
{ after(grammarAccess.getTransitionAccess().getEventEventCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__StateAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getStateStateCrossReference_3_0()); }
(
{ before(grammarAccess.getTransitionAccess().getStateStateIDTerminalRuleCall_3_0_1()); }
	RULE_ID{ after(grammarAccess.getTransitionAccess().getStateStateIDTerminalRuleCall_3_0_1()); }
)
{ after(grammarAccess.getTransitionAccess().getStateStateCrossReference_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statemachine__EventsAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatemachineAccess().getEventsEventParserRuleCall_1_1_0()); }
	ruleEvent{ after(grammarAccess.getStatemachineAccess().getEventsEventParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statemachine__ResetEventsAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatemachineAccess().getResetEventsEventCrossReference_2_1_0()); }
(
{ before(grammarAccess.getStatemachineAccess().getResetEventsEventIDTerminalRuleCall_2_1_0_1()); }
	RULE_ID{ after(grammarAccess.getStatemachineAccess().getResetEventsEventIDTerminalRuleCall_2_1_0_1()); }
)
{ after(grammarAccess.getStatemachineAccess().getResetEventsEventCrossReference_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statemachine__CommandsAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatemachineAccess().getCommandsCommandParserRuleCall_3_1_0()); }
	ruleCommand{ after(grammarAccess.getStatemachineAccess().getCommandsCommandParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statemachine__ConstantsAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatemachineAccess().getConstantsConstantParserRuleCall_4_1_0()); }
	ruleConstant{ after(grammarAccess.getStatemachineAccess().getConstantsConstantParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statemachine__StatesAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatemachineAccess().getStatesStateParserRuleCall_5_0()); }
	ruleState{ after(grammarAccess.getStatemachineAccess().getStatesStateParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Event__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getEventAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Event__CodeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventAccess().getCodeINTTerminalRuleCall_1_0()); }
	RULE_INT{ after(grammarAccess.getEventAccess().getCodeINTTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Event__GuardAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventAccess().getGuardGuardParserRuleCall_2_1_0()); }
	ruleGuard{ after(grammarAccess.getEventAccess().getGuardGuardParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ValueGuard__CondAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueGuardAccess().getCondValueParserRuleCall_0()); }
	ruleValue{ after(grammarAccess.getValueGuardAccess().getCondValueParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RangeGuard__MinAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRangeGuardAccess().getMinValueParserRuleCall_0_0()); }
	ruleValue{ after(grammarAccess.getRangeGuardAccess().getMinValueParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RangeGuard__MaxAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRangeGuardAccess().getMaxValueParserRuleCall_2_0()); }
	ruleValue{ after(grammarAccess.getRangeGuardAccess().getMaxValueParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantRef__ConstantAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantRefAccess().getConstantConstantCrossReference_0()); }
(
{ before(grammarAccess.getConstantRefAccess().getConstantConstantIDTerminalRuleCall_0_1()); }
	RULE_ID{ after(grammarAccess.getConstantRefAccess().getConstantConstantIDTerminalRuleCall_0_1()); }
)
{ after(grammarAccess.getConstantRefAccess().getConstantConstantCrossReference_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IntLiteral__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntLiteralAccess().getValueINTTerminalRuleCall_0()); }
	RULE_INT{ after(grammarAccess.getIntLiteralAccess().getValueINTTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Command__GuardAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandAccess().getGuardGuardParserRuleCall_0_1_0()); }
	ruleGuard{ after(grammarAccess.getCommandAccess().getGuardGuardParserRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Command__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getCommandAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Command__CodeAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandAccess().getCodeINTTerminalRuleCall_2_0()); }
	RULE_INT{ after(grammarAccess.getCommandAccess().getCodeINTTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getConstantAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__ValueAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantAccess().getValueValueParserRuleCall_1_0()); }
	ruleValue{ after(grammarAccess.getConstantAccess().getValueValueParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__State__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getStateAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__State__DescriptionAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getDescriptionSTRINGTerminalRuleCall_2_1_0()); }
	RULE_STRING{ after(grammarAccess.getStateAccess().getDescriptionSTRINGTerminalRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__State__ActionsAssignment_3_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getActionsCommandCrossReference_3_2_0()); }
(
{ before(grammarAccess.getStateAccess().getActionsCommandIDTerminalRuleCall_3_2_0_1()); }
	RULE_ID{ after(grammarAccess.getStateAccess().getActionsCommandIDTerminalRuleCall_3_2_0_1()); }
)
{ after(grammarAccess.getStateAccess().getActionsCommandCrossReference_3_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__State__TransitionsAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getTransitionsTransitionParserRuleCall_4_0()); }
	ruleTransition{ after(grammarAccess.getStateAccess().getTransitionsTransitionParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__State__ThingsAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getThingsThingParserRuleCall_5_1_0()); }
	ruleThing{ after(grammarAccess.getStateAccess().getThingsThingParserRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Thing__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getThingAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getThingAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Thing__GuardAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getThingAccess().getGuardGuardParserRuleCall_1_0()); }
	ruleGuard{ after(grammarAccess.getThingAccess().getGuardGuardParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


