/*
 * generated by Xtext 2.12.0
 */
grammar InternalHtmlLang;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package nl.altran.example.xtext.html.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package nl.altran.example.xtext.html.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import nl.altran.example.xtext.html.services.HtmlLangGrammarAccess;

}

@parser::members {

 	private HtmlLangGrammarAccess grammarAccess;

    public InternalHtmlLangParser(TokenStream input, HtmlLangGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Html";
   	}

   	@Override
   	protected HtmlLangGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleHtml
entryRuleHtml returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getHtmlRule()); }
	iv_ruleHtml=ruleHtml
	{ $current=$iv_ruleHtml.current; }
	EOF;

// Rule Html
ruleHtml returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='<html>'
		{
			newLeafNode(otherlv_0, grammarAccess.getHtmlAccess().getHtmlKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getHtmlAccess().getHeadHeadParserRuleCall_1_0());
				}
				lv_head_1_0=ruleHead
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getHtmlRule());
					}
					set(
						$current,
						"head",
						lv_head_1_0,
						"nl.altran.example.xtext.html.HtmlLang.Head");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getHtmlAccess().getBodyBodyParserRuleCall_2_0());
				}
				lv_body_2_0=ruleBody
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getHtmlRule());
					}
					set(
						$current,
						"body",
						lv_body_2_0,
						"nl.altran.example.xtext.html.HtmlLang.Body");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='</html>'
		{
			newLeafNode(otherlv_3, grammarAccess.getHtmlAccess().getHtmlKeyword_3());
		}
	)
;

// Entry rule entryRuleHead
entryRuleHead returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getHeadRule()); }
	iv_ruleHead=ruleHead
	{ $current=$iv_ruleHead.current; }
	EOF;

// Rule Head
ruleHead returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getHeadAccess().getHeadAction_0(),
					$current);
			}
		)
		otherlv_1='<head>'
		{
			newLeafNode(otherlv_1, grammarAccess.getHeadAccess().getHeadKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getHeadAccess().getHeadersHeaderParserRuleCall_2_0());
				}
				lv_headers_2_0=ruleHeader
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getHeadRule());
					}
					add(
						$current,
						"headers",
						lv_headers_2_0,
						"nl.altran.example.xtext.html.HtmlLang.Header");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_3='</head>'
		{
			newLeafNode(otherlv_3, grammarAccess.getHeadAccess().getHeadKeyword_3());
		}
	)
;

// Entry rule entryRuleHeader
entryRuleHeader returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getHeaderRule()); }
	iv_ruleHeader=ruleHeader
	{ $current=$iv_ruleHeader.current; }
	EOF;

// Rule Header
ruleHeader returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getHeaderAccess().getTitleParserRuleCall_0());
		}
		this_Title_0=ruleTitle
		{
			$current = $this_Title_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getHeaderAccess().getStyleParserRuleCall_1());
		}
		this_Style_1=ruleStyle
		{
			$current = $this_Style_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleTitle
entryRuleTitle returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTitleRule()); }
	iv_ruleTitle=ruleTitle
	{ $current=$iv_ruleTitle.current; }
	EOF;

// Rule Title
ruleTitle returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='<title>'
		{
			newLeafNode(otherlv_0, grammarAccess.getTitleAccess().getTitleKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_HTMLSTRING
				{
					newLeafNode(lv_name_1_0, grammarAccess.getTitleAccess().getNameHTMLSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTitleRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"nl.altran.example.xtext.html.HtmlLang.HTMLSTRING");
				}
			)
		)
		otherlv_2='</title>'
		{
			newLeafNode(otherlv_2, grammarAccess.getTitleAccess().getTitleKeyword_2());
		}
	)
;

// Entry rule entryRuleStyle
entryRuleStyle returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStyleRule()); }
	iv_ruleStyle=ruleStyle
	{ $current=$iv_ruleStyle.current; }
	EOF;

// Rule Style
ruleStyle returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='<style>'
		{
			newLeafNode(otherlv_0, grammarAccess.getStyleAccess().getStyleKeyword_0());
		}
		(
			(
				lv_styles_1_0=RULE_HTMLSTRING
				{
					newLeafNode(lv_styles_1_0, grammarAccess.getStyleAccess().getStylesHTMLSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStyleRule());
					}
					setWithLastConsumed(
						$current,
						"styles",
						lv_styles_1_0,
						"nl.altran.example.xtext.html.HtmlLang.HTMLSTRING");
				}
			)
		)
		otherlv_2='</style>'
		{
			newLeafNode(otherlv_2, grammarAccess.getStyleAccess().getStyleKeyword_2());
		}
	)
;

// Entry rule entryRuleBody
entryRuleBody returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBodyRule()); }
	iv_ruleBody=ruleBody
	{ $current=$iv_ruleBody.current; }
	EOF;

// Rule Body
ruleBody returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getBodyAccess().getBodyAction_0(),
					$current);
			}
		)
		otherlv_1='<body>'
		{
			newLeafNode(otherlv_1, grammarAccess.getBodyAccess().getBodyKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getBodyAccess().getContentsBodyContentsParserRuleCall_2_0());
				}
				lv_contents_2_0=ruleBodyContents
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBodyRule());
					}
					add(
						$current,
						"contents",
						lv_contents_2_0,
						"nl.altran.example.xtext.html.HtmlLang.BodyContents");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_3='</body>'
		{
			newLeafNode(otherlv_3, grammarAccess.getBodyAccess().getBodyKeyword_3());
		}
	)
;

// Entry rule entryRuleBodyContents
entryRuleBodyContents returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBodyContentsRule()); }
	iv_ruleBodyContents=ruleBodyContents
	{ $current=$iv_ruleBodyContents.current; }
	EOF;

// Rule BodyContents
ruleBodyContents returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getBodyContentsAccess().getParagraphParserRuleCall_0());
		}
		this_Paragraph_0=ruleParagraph
		{
			$current = $this_Paragraph_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getBodyContentsAccess().getUnorderedListParserRuleCall_1());
		}
		this_UnorderedList_1=ruleUnorderedList
		{
			$current = $this_UnorderedList_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleParagraph
entryRuleParagraph returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getParagraphRule()); }
	iv_ruleParagraph=ruleParagraph
	{ $current=$iv_ruleParagraph.current; }
	EOF;

// Rule Paragraph
ruleParagraph returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getParagraphAccess().getParagraphAction_0(),
					$current);
			}
		)
		otherlv_1='<p>'
		{
			newLeafNode(otherlv_1, grammarAccess.getParagraphAccess().getPKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getParagraphAccess().getContentsTextElementParserRuleCall_2_0());
				}
				lv_contents_2_0=ruleTextElement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getParagraphRule());
					}
					add(
						$current,
						"contents",
						lv_contents_2_0,
						"nl.altran.example.xtext.html.HtmlLang.TextElement");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_3='</p>'
		{
			newLeafNode(otherlv_3, grammarAccess.getParagraphAccess().getPKeyword_3());
		}
	)
;

// Entry rule entryRuleUnorderedList
entryRuleUnorderedList returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUnorderedListRule()); }
	iv_ruleUnorderedList=ruleUnorderedList
	{ $current=$iv_ruleUnorderedList.current; }
	EOF;

// Rule UnorderedList
ruleUnorderedList returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='<ul>'
		{
			newLeafNode(otherlv_0, grammarAccess.getUnorderedListAccess().getUlKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getUnorderedListAccess().getItemsListItemParserRuleCall_1_0());
				}
				lv_items_1_0=ruleListItem
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getUnorderedListRule());
					}
					add(
						$current,
						"items",
						lv_items_1_0,
						"nl.altran.example.xtext.html.HtmlLang.ListItem");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		otherlv_2='</ul>'
		{
			newLeafNode(otherlv_2, grammarAccess.getUnorderedListAccess().getUlKeyword_2());
		}
	)
;

// Entry rule entryRuleListItem
entryRuleListItem returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getListItemRule()); }
	iv_ruleListItem=ruleListItem
	{ $current=$iv_ruleListItem.current; }
	EOF;

// Rule ListItem
ruleListItem returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getListItemAccess().getListItemAction_0(),
					$current);
			}
		)
		otherlv_1='<li>'
		{
			newLeafNode(otherlv_1, grammarAccess.getListItemAccess().getLiKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getListItemAccess().getContentsTextElementParserRuleCall_2_0());
				}
				lv_contents_2_0=ruleTextElement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getListItemRule());
					}
					add(
						$current,
						"contents",
						lv_contents_2_0,
						"nl.altran.example.xtext.html.HtmlLang.TextElement");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_3='</li>'
		{
			newLeafNode(otherlv_3, grammarAccess.getListItemAccess().getLiKeyword_3());
		}
	)
;

// Entry rule entryRuleTextElement
entryRuleTextElement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTextElementRule()); }
	iv_ruleTextElement=ruleTextElement
	{ $current=$iv_ruleTextElement.current; }
	EOF;

// Rule TextElement
ruleTextElement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getTextElementAccess().getFreeformTextParserRuleCall_0());
		}
		this_FreeformText_0=ruleFreeformText
		{
			$current = $this_FreeformText_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTextElementAccess().getBoldParserRuleCall_1());
		}
		this_Bold_1=ruleBold
		{
			$current = $this_Bold_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTextElementAccess().getItalicsParserRuleCall_2());
		}
		this_Italics_2=ruleItalics
		{
			$current = $this_Italics_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleFreeformText
entryRuleFreeformText returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFreeformTextRule()); }
	iv_ruleFreeformText=ruleFreeformText
	{ $current=$iv_ruleFreeformText.current; }
	EOF;

// Rule FreeformText
ruleFreeformText returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_text_0_0=RULE_HTMLSTRING
			{
				newLeafNode(lv_text_0_0, grammarAccess.getFreeformTextAccess().getTextHTMLSTRINGTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getFreeformTextRule());
				}
				setWithLastConsumed(
					$current,
					"text",
					lv_text_0_0,
					"nl.altran.example.xtext.html.HtmlLang.HTMLSTRING");
			}
		)
	)
;

// Entry rule entryRuleBold
entryRuleBold returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBoldRule()); }
	iv_ruleBold=ruleBold
	{ $current=$iv_ruleBold.current; }
	EOF;

// Rule Bold
ruleBold returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='<b>'
		{
			newLeafNode(otherlv_0, grammarAccess.getBoldAccess().getBKeyword_0());
		}
		(
			(
				lv_text_1_0=RULE_HTMLSTRING
				{
					newLeafNode(lv_text_1_0, grammarAccess.getBoldAccess().getTextHTMLSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBoldRule());
					}
					setWithLastConsumed(
						$current,
						"text",
						lv_text_1_0,
						"nl.altran.example.xtext.html.HtmlLang.HTMLSTRING");
				}
			)
		)
		otherlv_2='</b>'
		{
			newLeafNode(otherlv_2, grammarAccess.getBoldAccess().getBKeyword_2());
		}
	)
;

// Entry rule entryRuleItalics
entryRuleItalics returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getItalicsRule()); }
	iv_ruleItalics=ruleItalics
	{ $current=$iv_ruleItalics.current; }
	EOF;

// Rule Italics
ruleItalics returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='<i>'
		{
			newLeafNode(otherlv_0, grammarAccess.getItalicsAccess().getIKeyword_0());
		}
		(
			(
				lv_text_1_0=RULE_HTMLSTRING
				{
					newLeafNode(lv_text_1_0, grammarAccess.getItalicsAccess().getTextHTMLSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getItalicsRule());
					}
					setWithLastConsumed(
						$current,
						"text",
						lv_text_1_0,
						"nl.altran.example.xtext.html.HtmlLang.HTMLSTRING");
				}
			)
		)
		otherlv_2='</i>'
		{
			newLeafNode(otherlv_2, grammarAccess.getItalicsAccess().getIKeyword_2());
		}
	)
;

RULE_HTMLSTRING : ~(('<'|'>'|'\t'|'\r'|'\n'))*;

RULE_WS : ('\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
