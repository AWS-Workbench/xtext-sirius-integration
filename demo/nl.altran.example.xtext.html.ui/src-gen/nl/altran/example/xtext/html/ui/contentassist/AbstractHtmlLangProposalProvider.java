/*
 * generated by Xtext 2.12.0
 */
package nl.altran.example.xtext.html.ui.contentassist;

import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.ui.editor.contentassist.AbstractJavaBasedContentProposalProvider;
import org.eclipse.xtext.ui.editor.contentassist.ContentAssistContext;
import org.eclipse.xtext.ui.editor.contentassist.ICompletionProposalAcceptor;

/**
 * Represents a generated, default implementation of superclass
 * {@link AbstractJavaBasedContentProposalProvider}. Methods are dynamically
 * dispatched on the first parameter, i.e., you can override them with a more
 * concrete subtype.
 */
public abstract class AbstractHtmlLangProposalProvider extends AbstractJavaBasedContentProposalProvider {
	
	public void completeHtml_Head(final EObject model, final Assignment assignment, final ContentAssistContext context,
			final ICompletionProposalAcceptor acceptor) {
		completeRuleCall(((RuleCall) assignment.getTerminal()), context, acceptor);
	}

	public void completeHtml_Body(final EObject model, final Assignment assignment, final ContentAssistContext context,
			final ICompletionProposalAcceptor acceptor) {
		completeRuleCall(((RuleCall) assignment.getTerminal()), context, acceptor);
	}

	public void completeHead_Headers(final EObject model, final Assignment assignment,
			final ContentAssistContext context, final ICompletionProposalAcceptor acceptor) {
		completeRuleCall(((RuleCall) assignment.getTerminal()), context, acceptor);
	}

	public void completeTitle_Name(final EObject model, final Assignment assignment, final ContentAssistContext context,
			final ICompletionProposalAcceptor acceptor) {
		completeRuleCall(((RuleCall) assignment.getTerminal()), context, acceptor);
	}

	public void completeStyle_Styles(final EObject model, final Assignment assignment,
			final ContentAssistContext context, final ICompletionProposalAcceptor acceptor) {
		completeRuleCall(((RuleCall) assignment.getTerminal()), context, acceptor);
	}

	public void completeBody_Contents(final EObject model, final Assignment assignment,
			final ContentAssistContext context, final ICompletionProposalAcceptor acceptor) {
		completeRuleCall(((RuleCall) assignment.getTerminal()), context, acceptor);
	}

	public void completeParagraph_Contents(final EObject model, final Assignment assignment,
			final ContentAssistContext context, final ICompletionProposalAcceptor acceptor) {
		completeRuleCall(((RuleCall) assignment.getTerminal()), context, acceptor);
	}

	public void completeUnorderedList_Items(final EObject model, final Assignment assignment,
			final ContentAssistContext context, final ICompletionProposalAcceptor acceptor) {
		completeRuleCall(((RuleCall) assignment.getTerminal()), context, acceptor);
	}

	public void completeListItem_Contents(final EObject model, final Assignment assignment,
			final ContentAssistContext context, final ICompletionProposalAcceptor acceptor) {
		completeRuleCall(((RuleCall) assignment.getTerminal()), context, acceptor);
	}

	public void completeFreeformText_Text(final EObject model, final Assignment assignment,
			final ContentAssistContext context, final ICompletionProposalAcceptor acceptor) {
		completeRuleCall(((RuleCall) assignment.getTerminal()), context, acceptor);
	}

	public void completeBold_Text(final EObject model, final Assignment assignment, final ContentAssistContext context,
			final ICompletionProposalAcceptor acceptor) {
		completeRuleCall(((RuleCall) assignment.getTerminal()), context, acceptor);
	}

	public void completeItalics_Text(final EObject model, final Assignment assignment,
			final ContentAssistContext context, final ICompletionProposalAcceptor acceptor) {
		completeRuleCall(((RuleCall) assignment.getTerminal()), context, acceptor);
	}

	public void complete_Html(final EObject model, final RuleCall ruleCall, final ContentAssistContext context,
			final ICompletionProposalAcceptor acceptor) {
		// subclasses may override
	}

	public void complete_Head(final EObject model, final RuleCall ruleCall, final ContentAssistContext context,
			final ICompletionProposalAcceptor acceptor) {
		// subclasses may override
	}

	public void complete_Header(final EObject model, final RuleCall ruleCall, final ContentAssistContext context,
			final ICompletionProposalAcceptor acceptor) {
		// subclasses may override
	}

	public void complete_Title(final EObject model, final RuleCall ruleCall, final ContentAssistContext context,
			final ICompletionProposalAcceptor acceptor) {
		// subclasses may override
	}

	public void complete_Style(final EObject model, final RuleCall ruleCall, final ContentAssistContext context,
			final ICompletionProposalAcceptor acceptor) {
		// subclasses may override
	}

	public void complete_Body(final EObject model, final RuleCall ruleCall, final ContentAssistContext context,
			final ICompletionProposalAcceptor acceptor) {
		// subclasses may override
	}

	public void complete_BodyContents(final EObject model, final RuleCall ruleCall, final ContentAssistContext context,
			final ICompletionProposalAcceptor acceptor) {
		// subclasses may override
	}

	public void complete_Paragraph(final EObject model, final RuleCall ruleCall, final ContentAssistContext context,
			final ICompletionProposalAcceptor acceptor) {
		// subclasses may override
	}

	public void complete_UnorderedList(final EObject model, final RuleCall ruleCall, final ContentAssistContext context,
			final ICompletionProposalAcceptor acceptor) {
		// subclasses may override
	}

	public void complete_ListItem(final EObject model, final RuleCall ruleCall, final ContentAssistContext context,
			final ICompletionProposalAcceptor acceptor) {
		// subclasses may override
	}

	public void complete_TextElement(final EObject model, final RuleCall ruleCall, final ContentAssistContext context,
			final ICompletionProposalAcceptor acceptor) {
		// subclasses may override
	}

	public void complete_FreeformText(final EObject model, final RuleCall ruleCall, final ContentAssistContext context,
			final ICompletionProposalAcceptor acceptor) {
		// subclasses may override
	}

	public void complete_Bold(final EObject model, final RuleCall ruleCall, final ContentAssistContext context,
			final ICompletionProposalAcceptor acceptor) {
		// subclasses may override
	}

	public void complete_Italics(final EObject model, final RuleCall ruleCall, final ContentAssistContext context,
			final ICompletionProposalAcceptor acceptor) {
		// subclasses may override
	}

	public void complete_HTMLSTRING(final EObject model, final RuleCall ruleCall, final ContentAssistContext context,
			final ICompletionProposalAcceptor acceptor) {
		// subclasses may override
	}

	public void complete_WS(final EObject model, final RuleCall ruleCall, final ContentAssistContext context,
			final ICompletionProposalAcceptor acceptor) {
		// subclasses may override
	}

	public void complete_ANY_OTHER(final EObject model, final RuleCall ruleCall, final ContentAssistContext context,
			final ICompletionProposalAcceptor acceptor) {
		// subclasses may override
	}
}
