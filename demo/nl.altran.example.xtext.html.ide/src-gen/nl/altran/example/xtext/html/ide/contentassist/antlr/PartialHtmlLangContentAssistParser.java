/*
 * generated by Xtext 2.12.0
 */
package nl.altran.example.xtext.html.ide.contentassist.antlr;

import java.util.Collection;
import java.util.Collections;

import org.eclipse.xtext.AbstractRule;
import org.eclipse.xtext.ide.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.partialEditing.IPartialEditingContentAssistParser;
import org.eclipse.xtext.util.PolymorphicDispatcher;

public class PartialHtmlLangContentAssistParser extends HtmlLangParser implements IPartialEditingContentAssistParser {
	
	private AbstractRule rule;

	@Override
	public void initializeFor(final AbstractRule rule) {
		this.rule = rule;
	}

	@Override
	protected Collection<FollowElement> getFollowElements(final AbstractInternalContentAssistParser parser) {
		if (this.rule == null || this.rule.eIsProxy()) {
			return Collections.emptyList();
		}
		final String methodName = "entryRule" + this.rule.getName();
		final PolymorphicDispatcher<Collection<FollowElement>> dispatcher = new PolymorphicDispatcher<Collection<FollowElement>>(
				methodName, 0, 0, Collections.singletonList(parser));
		dispatcher.invoke();
		return parser.getFollowElements();
	}

}
