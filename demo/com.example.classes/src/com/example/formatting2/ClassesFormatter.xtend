/*
 * generated by Xtext 2.18.0.M3
 */
package com.example.formatting2

import com.example.classes.ClassModel
import com.example.classes.ClassesPackage
import com.example.classes.Constant
import com.example.services.ClassesGrammarAccess
import com.google.inject.Inject
import org.eclipse.xtext.formatting2.AbstractFormatter2
import org.eclipse.xtext.formatting2.IFormattableDocument
import com.example.classes.Association

@SuppressWarnings("access")
class ClassesFormatter extends AbstractFormatter2 {
	extension ClassesPackage = ClassesPackage::eINSTANCE
	
	@Inject extension ClassesGrammarAccess

	def dispatch void format(ClassModel classModel, extension IFormattableDocument document) {
		classModel.content.forEach[format]
	}

	def dispatch void format(Constant constant, extension IFormattableDocument document) {
		constant.regionFor.keyword("constant").prepend[newLines = 2]
	}
	
	def dispatch void format(Association assoc, extension IFormattableDocument document) {
		assoc.regionFor.keyword("association").prepend[newLines = 2]
	}
	
	def dispatch void format(com.example.classes.Class clazz, extension IFormattableDocument document) {
		clazz.regionFor.keyword("class").prepend[newLines = 2]
	}
	
	// TODO: implement for Association, Class, Attribute
}
